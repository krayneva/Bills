var buildVersion = "1.1.6";var pictureSource;   // picture sourcevar destinationType; // sets the format of returned value// Г”Г“Г’ГЋГ‚вЂ°ГЊЛ‡Л‡ Г™Г“ГљГ“вЂћпЈївЂЎГ™Г‹Л‡ Г’ ГЌвЂЎГЏГ‚пЈїЛљ\вЂ°Г‹Г’ГЌвЂЎvar currentPhoto;// вЂЎвЂ°пЈїГ‚Г’ Г’Г‚пЈївЂљГ‚пЈївЂЎvar addPhotoURL = "api/image/";var getPhotoURL = "api/image/";var getPhotosURL = "api/image/";var getTokenURL = "token";var getEnvironmentURL = "api/account/environment";/*GET /api/productlists - получение всего спискаGET /api/productlists/{id} - получение одногоPOST /api/productlists - создание нового/сохранение*/var getTransactionsURL = "api/transactions";var getProductListsURL = "api/productlists";/*список продуктовGET /api/data/GoodItems/ru-ruсписок единиц измеренияGET /api/data/GoodMeasures/ru-ru*/var getGoodItemsURL = "api/data/GoodItems/ru-ru";var getGoodMeasuresURL = "api/data/GoodMeasures/ru-ru";var fileSystem;var db = 0;var currentPage = "pageAuth";var menuStatus =false;document.addEventListener("online", onOnline, false);document.addEventListener("offline", onOffline, false);document.addEventListener("deviceready",onDeviceReady,false);// интервал отправки списков продуктов на серверvar refreshIntervalId;function onDeviceReady() {        pictureSource=navigator.camera.PictureSourceType;    destinationType=navigator.camera.DestinationType;    window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, onError);	openDB();//	$.mobile.allowCrossDomainPages = true;	//	refreshBills();//	showAuthPage();   var uuid = "593a33fc-2d22-418c-967a-a2ff60e40da6";    var token = "a676f0fc1be603eb9db15316490a605c";    var secret = "28bfa152cbb25ce82f447784994addc7";    var issuance = "1419938400";    plugins.appBlade.setupAppBlade(uuid,token, secret, issuance);    plugins.appBlade.catchAndReportCrashes();    plugins.appBlade.allowFeedbackReporting();  	    document.addEventListener("backbutton", function(e){    	console.log($( ":mobile-pagecontainer" ).pagecontainer( "getActivePage" ).prop("id"));        if($( ":mobile-pagecontainer" ).pagecontainer( "getActivePage" ).prop("id")==('pageAuth')){            //e.preventDefault();            navigator.app.exitApp();        }        else {            navigator.app.backHistory();        }    }, false);    var options = {		duration:	200,		easing:		'swing'	};    // $.mobile.pageContainer.pagecontainer({ defaults: true });    console.log("SCREEN SIZE: "+window.devicePixelRatio+" ;"+screen.width+" ;"+window.innerWidth);                //SHOW        $( ":mobile-pagecontainer" ).on( "pagecontainershow", function( event, ui ) {   	ui.toPage.on('taphold', function(ev) {    		ev.preventDefault();    		ev.stopPropagation();			plugins.appBlade.showFeedbackDialog("true");			return false;		});         $('#alert_dialog').on('taphold', function(ev) {                ev.preventDefault();                 ev.stopPropagation();                 plugins.appBlade.showFeedbackDialog("true");                 return false;                 });    	// PAGE BIILS    	 if (ui.toPage.attr("id")=="pageBills"){     		refreshBills();     	  }    	// PAGE MAIN    	  if (ui.toPage.attr("id")=="pageMain"){  		    $(".categoryMenu").click(function(e){		        $('.widgetMenu').show();		        e.stopPropagation();		        $("body").click(function (t) {		            if (!$(t.target).hasClass('categoryMenu') || !$(t.target).hasClass('widgetMenuPanel')) {		                $('.widgetMenu').hide();		            };		        });		    });		    $(".menu").click(function(e){		        $('.menu').addClass('menuActive');		        $('.menuPanel').show();		        e.stopPropagation();		        $("body").click(function (t) {		            if (!$(t.target).hasClass('menu') || !$(t.target).hasClass('menuPanel')) {		                $('.menuPanel').hide();		                $('.menu').removeClass('menuActive');		            };		        });		    });		    		    		    //(default: 10px)		   // $.event.special.swipe.scrollSupressionThreshold = 1;		     //(default: 1000ms)		    $.event.special.swipe.durationThreshold = 3000;		     //(default: 30px)		    $.event.special.swipe.horizontalDistanceThreshold = 30;		    //(default: 75px)		    $.event.special.swipe.verticalDistanceThreshold  = 300;		    		    		    $( ":mobile-pagecontainer" ).on('swipeleft', function(e) {		    	$( "#mypanel" ).panel( "close" );			});		    $( ":mobile-pagecontainer" ).on('swiperight', function(e) {		    	$( "#mypanel" ).panel( "open" , options);							});		    updateMainPage();      	  }    	  //PAGE CHECK    	  if (ui.toPage.attr("id")=="pageCheck"){    		    db.transaction(    			   	 function(transaction) {    			   		 var billID = window.localStorage.getItem(BILL_ID_KEY);    			   	        transaction.executeSql('SELECT * FROM Bills where id='+billID+';', [], function(transaction, result) {    			   	        	 var row = result.rows.item(0);    			   	        	 $('#billName').html(row.name+" "+row.id);    			   	        	 //$('#billDate').html(formatDate(row.createdate));    			   	        	 $('#billImage').attr('src',row.path);    			    	        }, onError);    		  	    });    	  }    	      	  //PAGE LOGIN    	  if (ui.toPage.attr("id")=="pageAuth"){    		 updateLoginPage();     	  }    	  // PAGE CONNECTION SETTINGS    	  if (ui.toPage.attr("id")=="pageConnectionSettings"){    		  getSetting(SETTING_SERVER_ADDRESS, SERVER_ADDRESS_DEFAULT).done(function(res){    			  document.getElementById('serverAddress').value =res;    		  });      	  }    	  // PAGE EXPENSES GRID    	  if (ui.toPage.attr("id")=="pageExpenses"){    		  window.localStorage.removeItem(TRANSACTION_ID_KEY);    		  updateTransactionPage();      	  }    	      	  // PAGE TRANSACTION INFO    	  if (ui.toPage.attr("id")=="pageTransactionInfo"){    		  updateTransactionInfoPage();    		        	  }    	      	  // PAGE SHOP LIST    	  if (ui.toPage.attr("id")=="pageShopList"){    		  console.log("Height of edit: "+  $('ul li:last').height());    		 //window.setInterval(sendShopLists(), 5000);    		//  refreshIntervalId =  setInterval(function(){ alert("Hello"); }, 3000);    		  // каждые две минуты синкаем списки     		  refreshIntervalId =  setInterval(function(){ sendShopLists(); }, 1000*60*2);    		 updateShopListsPage(true);    		  $('#shopListName').on( "swiperight",nextShopList);    		  $('#shopListName').on( "swipeleft",previousShopList);    		  $('#shopListName').bind( "tap",nextShopList);    		 $("#sendShopListImage").click(function(e){    			 sendShopList(window.localStorage.getItem('ShopListID'));    		 	});    		     		 $("#addToShopListImage").click(function(e){    			 if ($('#inset-autocomplete-input').val()=="") return;    				addToShopList(window.localStorage.getItem('ShopListID'),$('#inset-autocomplete-input').val()).done(    						function (res){    							updateShopListsPage(true);    							 $( "#inset-autocomplete-input").val('');    						}    					);    			});    	  	}    	      	});    // для нескольих запросов    //$.when()    // HIDE    $( ":mobile-pagecontainer" ).on( "pagecontainerbeforehide", function( event, ui ) {    	// PAGE SETTINGS   	 if (ui.prevPage.attr("id")=="pageSettings"){    		saveSettings();    	  }   	 if (ui.prevPage.attr("id")=="pageShopList"){		  clearInterval(refreshIntervalId);		  sendShopLists();		  closeShopListsPage();		//  alert("Interval for send shop lists is cleared!!");   	 }   	if (ui.prevPage.attr("id")=="pageConnectionSettings"){		console.log("PAGE CONTAINER HIDE EVENT!");		saveConnectionSettings();   		}    });        showAuthPage();} function onPullDown(){	alert("dsaaaaaaaaaaaaaaaaa");}    function gotFS(fs){     	fileSystem = fs;    }    function onSuccess(){    	     }        function onError(error){    	alert("Error: "+error);    	console.log(error);    	console.log(error.message);    }          function onErrorSilent(error){    	console.log(error);    } 	    	    	    	function onOnline() {		console.log("Network is online");		uploadPhoto();	}		function onOffline(){		console.log("Network is offline");	}	