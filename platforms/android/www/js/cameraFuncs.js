 // Called when a photo is successfully retrieved    //    function onPhotoDataSuccess(imageData) {    	try{	      // Uncomment to view the base64-encoded image data	      // console.log(imageData);		      // Get image handle	      //	      var smallImage = document.getElementById('largeImage');		      // Unhide image elements	      //	      smallImage.style.display = 'block';		      // Show the captured photo	      // The in-line CSS rules are used to resize the image	      //	      smallImage.src = "data:image/jpeg;base64," + imageData;	      currentPhoto = imageData;    	}		catch(e){			  dumpError("onPhotodataSuccess",e);		  }	    }    // Called when a photo is successfully retrieved    //    function onPhotoURISuccess(imageURI) {    	try{	      // Uncomment to view the image file URI	      // console.log(imageURI);		      // Get image handle	      //	      var largeImage = document.getElementById('largeImage');		      // Unhide image elements	      //	      largeImage.style.display = 'block';		      // Show the captured photo	      // The in-line CSS rules are used to resize the image	      //	      largeImage.src = imageURI;	      currentPhoto = imageURI;    	}		catch(e){			  dumpError("onPhotoUriSuccess",e);		  }	    }    // A button will call this function    ///*    function capturePhoto() {        // Take picture using device camera and retrieve image as base64-encoded string        navigator.camera.getPicture(onPhotoURISuccess, onPhotoFail, { quality: getSetting(SETTING_JPEG_QUALITY),          destinationType:  destinationType.FILE_URI,          targetWidth: getSetting(SETTING_OUTPUT_WIDTH),          targetHeight: getSetting(SETTING_COLOR_MODE));      }*/    // A button will call this function    //    function capturePhotoEdit() {    	try{	      // Take picture using device camera, allow edit, and retrieve image as base64-encoded string	      navigator.camera.getPicture(onPhotoDataSuccess, onPhotoFail, { quality: 20, allowEdit: true,	        destinationType: destinationType.DATA_URL });    	}		catch(e){			  dumpError("capturePhotoEdit",e);		  }	    }    // A button will call this function    //    function getPhoto(source) {    	try{	      // Retrieve image file location from specified source	      navigator.camera.getPicture(onPhotoURISuccess, onPhotoFail, { quality: 20,	        destinationType: destinationType.FILE_URI,	        sourceType: source });    	}		catch(e){			  dumpError("getPhoto",e);		  }	    }    // Called if something bad happens.    //    function onPhotoFail(message) {    	/*try{    		alert('Failed because: ' + message);    	}		catch(e){			  dumpError("onPhotoFail",e);		  }	*/    }                 function captureCustomPhoto(){    	try{	    	navigator.customCamera.getPicture("photo.jpg",onCustomPhotoSuccess, onPhotoFail,{	    		filename: "photo.jpg"	    	    ,quality: 100	    		,targetWidth:-1	    		,targetHeight:-1	    		,colorMode:"565"	    	});    	}		catch(e){			  dumpError("captureCustomPhoto",e);		  }	    }            function onCustomPhotoSuccess(json) {    	try{	//    	alert ("on custom photo success!");	    /*	alert(JSON.stringify(json));	    	var jsonResult;	    	try{	    		alert ("trying to parse JSON");	    		jsonResult =  jQuery.parseJSON(json);	    		alert ("parsed JSON");	    			    	}	    	catch(Exception){	    		alert("Exception caught!");	    		alert(Exception);	    		jsonResult = json; 	    	}*/	    	jsonResult =  jQuery.parseJSON(json);	    	if (jsonResult==null)	    		jsonResult = json;	       // alert ("Filepath: "+jsonResult.ImageUri);	    	//alert ("Coords: "+jsonResult.Latitude+" "+jsonResult.Longitude+" "+jsonResult.Altitude);	        addBill(jsonResult.ImageUri, jsonResult.Latitude, jsonResult.Longitude, jsonResult.Altitude);	   //     alert("Altitude: "+jsonResult.Altitude);	        uploadPhoto();    	}		catch(e){			  dumpError("onCutomPhotoSuccess",e);		  }	    }    