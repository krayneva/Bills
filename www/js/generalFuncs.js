var debugMode = false;var buildVersion = "1.2.5.1";var pictureSource;   // picture sourcevar destinationType; // sets the format of returned value// Г”Г“Г’ГЋГ‚вЂ°ГЊЛ‡Л‡ Г™Г“ГљГ“вЂћпЈївЂЎГ™Г‹Л‡ Г’ ГЌвЂЎГЏГ‚пЈїЛљ\вЂ°Г‹Г’ГЌвЂЎvar currentPhoto;// вЂЎвЂ°пЈїГ‚Г’ Г’Г‚пЈївЂљГ‚пЈївЂЎvar addPhotoURL = "api/image/";var getPhotoURL = "api/image/";var getPhotosURL = "api/image/";var getTokenURL = "token";var getEnvironmentURL = "api/account/environment";/*GET /api/productlists - получение всего спискаGET /api/productlists/{id} - получение одногоPOST /api/productlists - создание нового/сохранение*/var getTransactionsURL = "api/transactions";var getProductListsURL = "api/productlists";//http://billview.cloudapp.net/rec/api/Transactions/Testvar getTestErrorURL ="api/Transactions/Test";var getRegistrationURL = "api/Account/Register"; /*список продуктовGET /api/data/GoodItems/ru-ruсписок единиц измерения/Users/irina/Bills/config.xmlGET /api/data/GoodMeasures/ru-ru*/var getGoodItemsURL = "api/data/GoodItems/ru-ru";var getGoodMeasuresURL = "api/data/GoodMeasures/ru-ru";var fileSystem;var db = 0;var currentPage = "pageAuth";var menuStatus =false;var keyboardHeight = 0; var currentBottom = 0;var currentPosition;var requestTransactionPageCount = 0;document.addEventListener("online", onOnline, false);document.addEventListener("offline", onOffline, false);document.addEventListener("deviceready",onDeviceReady,false);var tempShopListID = '3113';// интервал отправки списков продуктов на серверvar refreshIntervalId;function onDeviceReady() {    try{	    pictureSource=navigator.camera.PictureSourceType;	    destinationType=navigator.camera.DestinationType;	    window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, onError);	    $.mobile.page.prototype.options.domCache = true;	     	    // подключаем appblade	    var uuid = "593a33fc-2d22-418c-967a-a2ff60e40da6";	    var token = "a676f0fc1be603eb9db15316490a605c";	    var secret = "28bfa152cbb25ce82f447784994addc7";	    var issuance = "1419938400";	    plugins.appBlade.setupAppBlade(uuid,token, secret, issuance);	    plugins.appBlade.catchAndReportCrashes();	    plugins.appBlade.allowFeedbackReporting();			    window.addEventListener('native.keyboardshow', keyboardShowHandler);	    window.addEventListener('native.keyboardhide', keyboardHideHandler);	    document.addEventListener("pause", onPause, false);	    document.addEventListener("resume", onResume, false);	    	    // чтобы диалоги не заслоняли все остальное		  $(document).on('pagebeforeshow', 'div[data-role="dialog"]', function (e, ui) {			    ui.prevPage.addClass("ui-dialog-background ");			});				$(document).on('pagehide', 'div[data-role="dialog"]', function (e, ui) {			    $(".ui-dialog-background ").removeClass("ui-dialog-background ");			});		    	    document.addEventListener("backbutton", function(e){	    	console.log($( ":mobile-pagecontainer" ).pagecontainer( "getActivePage" ).prop("id"));	        if($( ":mobile-pagecontainer" ).pagecontainer( "getActivePage" ).prop("id")==('pageAuth')){	            //e.preventDefault();	            navigator.app.exitApp();	        }	        else {	            navigator.app.backHistory();	        }	    }, false);	    var options = {			duration:	200,			easing:		'swing'		};	 	   // $.mobile.pageContainer.pagecontainer({ defaults: true });	    console.log("SCREEN SIZE: "+window.devicePixelRatio+" ;"+screen.width+" ;"+window.innerWidth);	    	  	    	   // валидация email 	    $(document).on("blur", "#registerPage input[type='email']", function()	        	{	        		var val = $(this).val();	        		if(val.length <= 0)	        			{	        				$(this).parent().removeClass('valid');	    	    			$(this).parent().removeClass('error');	    	    			return 0;	        			}		        		if(val.search('@') > 0)	        		{	        			$(this).parent().addClass('valid');	        			$(this).parent().removeClass('error');	        		}	        		else	        		{	        			$(this).parent().addClass('error');	        			$(this).parent().removeClass('valid');	        		}	        	});	    	    // валидация ника	    $(document).on("blur", "#nick", function()	        	{	        		var val = $(this).val();	        		if(val.length <= 0)	        			{	        				$(this).parent().removeClass('valid');	    	    			$(this).parent().removeClass('error');	    	    			return 0;	        			}		        		else	        		{	        			$(this).parent().addClass('valid');	        			$(this).parent().removeClass('error');	        		}	        	});	    	    	    //SHOW	       $( ":mobile-pagecontainer" ).on( "pagecontainershow", function( event, ui ) {		    	   	   	ui.toPage.on('taphold', function(ev) {	    		ev.preventDefault();	    		ev.stopPropagation();				plugins.appBlade.showFeedbackDialog("true");				return false;			});	         $('#alert_dialog').on('taphold', function(ev) {	                ev.preventDefault();	                 ev.stopPropagation();	                 plugins.appBlade.showFeedbackDialog("true");	                 return false;	                 });	    	// PAGE BIILS	    	 if (ui.toPage.attr("id")=="pageBills"){	     		refreshBills();	     	  }	    	// PAGE MAIN	    	  if (ui.toPage.attr("id")=="pageMain"){	  		/*    $(".categoryMenu").click(function(e){			        $('.widgetMenu').show();			        e.stopPropagation();			        $("body").click(function (t) {			            if (!$(t.target).hasClass('categoryMenu') || !$(t.target).hasClass('widgetMenuPanel')) {			                $('.widgetMenu').hide();			            };			        });			    });*/				    $(".menu").click(function(e){			        $('.menu').addClass('menuActive');			        $('.menuPanel').show();			        e.stopPropagation();			        $("body").click(function (t) {			            if (!$(t.target).hasClass('menu') || !$(t.target).hasClass('menuPanel')) {			                $('.menuPanel').hide();			                $('.menu').removeClass('menuActive');			            };			        });			    });			    			     	            $( ":mobile-pagecontainer" ).off('swipeleft');                       	            $( ":mobile-pagecontainer" ).off('swiperight');			    $( ":mobile-pagecontainer" ).on('swipeleft', function(e) {			    	$( "#mypanel" ).panel( "close" );				});				    $( ":mobile-pagecontainer" ).on('swiperight', function(e) {			    	$( "#mypanel" ).panel( "open" , options);									});			    updateMainPage();	      	  }	    	  //PAGE CHECK	    	  if (ui.toPage.attr("id")=="pageCheck"){	    		    db.transaction(	    			   	 function(transaction) {	    			   		 var billID = window.localStorage.getItem(BILL_ID_KEY);	    			   	        transaction.executeSql('SELECT * FROM Bills where id='+billID+';', [], function(transaction, result) {	    			   	        	 var row = result.rows.item(0);	    			   	        	 $('#billName').html(row.name+" "+row.id);	    			   	        	 //$('#billDate').html(formatDate(row.createdate));	    			   	        	 $('#billImage').attr('src',row.path);	    			    	        }, onError);	    		  	    });	    	  }	    	  	    	  //PAGE LOGIN	    	  if (ui.toPage.attr("id")=="pageAuth"){	    		 db = 0;	    		 updateLoginPage(); 	    	  }	    	  // PAGE CONNECTION SETTINGS	    	  if (ui.toPage.attr("id")=="pageConnectionSettings"){	    		//  getSetting(SETTING_SERVER_ADDRESS, SERVER_ADDRESS_DEFAULT).done(function(res){	    		//	  document.getElementById('serverAddress').value =res;	    		// });	    	  document.getElementById('serverAddress').value =getSettingFromStorage(SETTING_SERVER_ADDRESS, SERVER_ADDRESS_DEFAULT);	      	  }	    	  // PAGE EXPENSES GRID	    	  if (ui.toPage.attr("id")=="pageExpenses"){	    		  	    		  //обновляем только если перешли с главного экрана	    		  // отправляем событие в ФБ	    		  if (ui.prevPage.attr("id")=="pageMain"){	    			  var json  = new Object();	    			  var categoryID = window.localStorage.getItem(CATEGORY_ID_KEY);	    			  getWidget(categoryID).done(function(result){	   					  var j = jQuery.parseJSON(result);	   	    			  	json.category = j.Name; 	  	        				dumpEvent("OpenWidget event", json);			   					});	         		  // запрашиваем каждый раз	         		  requestAndUpdateTransactionPage();	    		  }	    		  else{	    			  window.localStorage.removeItem(TRANSACTION_ID_KEY); 	    		  }	      	  }	    	  	    	  // PAGE TRANSACTION INFO	    	  if (ui.toPage.attr("id")=="pageTransactionInfo"){	    		  updateTransactionInfoPage();	    		  	      	  }	    	  	    	  // PAGE SHOP LIST	    	  if (ui.toPage.attr("id")=="pageShopList"){	    		  // если не вернулись из окна создания списка (и ничего не создали н-р) проверяем есть ли вообще списки для отображения	    		  getShopListCount().done(function(res){	    			 if (res==0){	    				if (ui.prevPage.attr("id")=="pageCreateShopList")	    					navigator.app.backHistory();	    				else	    					showCreateShopListPage();	    				return;	    			 }	    			 	            $( ":mobile-pagecontainer" ).off('swipeleft');                       	            $( ":mobile-pagecontainer" ).off('swiperight');		    			    		  // инитим меню справа	  		    $( ":mobile-pagecontainer" ).on('swiperight', function(e) {	  		    		  		    	$( "#mypanelShopList" ).panel( "close" );				});				    $( ":mobile-pagecontainer" ).on('swipeleft', function(e) {			    	$( "#mypanelShopList" ).panel( "open" , options);									});			    				// <li> <img class="ico" src="img/ico_8.png"/>Добавить виджет</li>				    // заполняем менюшку со списком существующих списков			    getShopLists().done(function(res){			    	$("#panelList").html('');			    			    				    	htm = "<li onclick='showCreateShopListPage()'>Новый список</li>";			    	for (var i=0; i<res.rows.length; i++){			    		var row =res.rows.item(i);			    		htm = htm+"<li id = 'list"+i+"' pos="+i+">"+row.name+"</li>";			    	}			    					    	$("#panelList").html(htm);			    	$("#panelList").listview('refresh');		    				    				    	for (var i=0; i<res.rows.length; i++){			    	$("#list"+i).on( "tap",function(e){			    		showShopListByNumber(this.getAttribute("pos"));					 });			    	}			   			    		  console.log("Height of edit: "+  $('ul li:last').height());		     		 //window.setInterval(sendShopLists(), 5000);		     		//  refreshIntervalId =  setInterval(function(){ alert("Hello"); }, 3000);		     		  // каждые две минуты синкаем списки 		     		 refreshIntervalId =  setInterval(function(){		     			currentList = window.localStorage.getItem("CurrentShopListNum");		     			getShopLists().done(function(res){		     				var currentShopList = window.localStorage.getItem("CurrentShopListNum");		     				 if (currentShopList==undefined) {		     					 currentShopList = 0;		     					 window.localStorage.setItem("CurrentShopListNum",0);		     				 }		     				 var listID = res.rows.item(parseInt(currentShopList)).id;		     				 sendShopList(listID);		     			});		     				 		     			}, 1000*60*2);		     		updateShopListsPage(true);		     						     		  $('#shopListName').on( "swiperight",nextShopList);		     		  $('#shopListName').on( "swipeleft",previousShopList);		     		  $('#shopListName').bind( "tap",nextShopList);		     		  			     		 $("#addToShopListImage").click(function(e){		     			 if ($('#inset-autocomplete-input').val()=="") return;		     				addToShopList(window.localStorage.getItem('ShopListID'),$('#inset-autocomplete-input').val()).done(		     						function (res){		     							updateShopListsPage(true);		     							 $( "#inset-autocomplete-input").val('');		     						}		     					);		     			});			    				    	});			    					});			    		    	  	}	    	  	    	  	    	  	    	  // PAGE CREATE SHOP LIST	    	  if (ui.toPage.attr("id")=="pageCreateShopList"){	    			 $("#createShopListButton").click(function(e){	    				 var s =  $("#shopListNameInput").val();		     			 	createShopList(s).done(function(){		     			 		console.log("createShopList Is done!");		     			 		sendShopList(tempShopListID).done(function(res){		     			 			console.log("send shop list is done, res: "+res);		     			 			if (res!="")		     			 			//	addShopListID(res, tempShopListID);		     			 			navigator.app.backHistory();		     			 			updateShopListsPage(true);		     			 		});		     			 	});		     		 	});	      	  }	    	  	    	  	    	  // PAGE REGISTRATION	    	  if (ui.toPage.attr("id")=="pageRegistration"){		    		$('.ui-input-reg').parent().addClass('ui-register-input');		    		$('.ui-input-reg-promo').parent().addClass('ui-register-input-promo');	    	/*	  $('#buildVersion').html("Версия сборки: "+buildVersion);*/		    			    		  var accepted = window.localStorage.getItem(ACCEPT_RULES_KEY);	    		  if ((accepted==undefined)||(accepted=="false")){	    			  $('#checkboxRules').prop('checked', false).checkboxradio("refresh");	    			//  $('#checkboxRules').prop('disabled', true).checkboxradio("refresh");	    		  }	    		  else{	    			  $('#checkboxRules').prop('checked', true).checkboxradio("refresh");	    			//  $('#checkboxRules').prop('disabled', false).checkboxradio("refresh");	    		  }	    		  	    		  	    		  $('#checkboxRules').click(function (){	    			  if($(this).is(':checked')){	 					   $('#checkboxRules').prop('checked', false).checkboxradio("refresh");	 					   showRulesPage();	    			   }	    			   else{	       			  			window.localStorage.setItem(ACCEPT_RULES_KEY,"false");	    			   }	    		  });	    		  	    		  	    				    		  	        /*                               	            var isRobot = window.localStorage.getItem(IS_ROBOT_KEY);	            if ((isRobot==undefined)||(isRobot=="true")){	                $('#checkboxRobot').prop('checked', false).flipswitch("refresh");	                }	            else{	                $('#checkboxRobot').prop('checked', true).flipswitch("refresh");	                }	          */                           	            var nick = window.localStorage.getItem(NICK_KEY);	            if (nick==undefined) nick = "";	            $("#nick").val(nick);	                                       	            var email = window.localStorage.getItem(EMAIL_KEY);	            if (email==undefined) email= "";	            $("#email").val(email);	                                       	            var promo = window.localStorage.getItem(PROMO_KEY);	            if (promo==undefined) promo = "";	            $("#promo").val(promo);		    	  }	    	  	    	  // PAGE Rules	    	  if (ui.toPage.attr("id")=="pageRules"){	    	  }	    	  	    	  // PAGE Rules	    	  if (ui.toPage.attr("id")=="pageHabits"){	    	  }			    	  // PAGE Rules	    	  if (ui.toPage.attr("id")=="pageError"){	    	   	   var errorMessage = window.localStorage.getItem(DIALOG_MESSAGE);	    	   	   var errorHeader = window.localStorage.getItem(DIALOG_HEADER);	    	   	   $("#errorText").html(errorMessage);	    	   	$("#errorHeader").html(errorHeader);	    	   	   	    	  }			    	  	    	 }); 	       	       	       	       	    // для нескольих запросов	    //$.when()	    // HIDE	    $( ":mobile-pagecontainer" ).on( "pagecontainerbeforehide", function( event, ui ) {	    	// PAGE SETTINGS	   	 if (ui.prevPage.attr("id")=="pageSettings"){	    		saveSettings();	    	  }	   	 if (ui.prevPage.attr("id")=="pageShopList"){			  clearInterval(refreshIntervalId);				var currentShopList = window.localStorage.getItem("CurrentShopListNum");				getShopLists().done(function(res){					 var listID = res.rows.item(parseInt(currentShopList)).id;					 sendShopList(listID);				});			// sendShopLists();			  closeShopListsPage();			//  alert("Interval for send shop lists is cleared!!");	   	 }		if (ui.toPage.attr("id")=="myDialog"){			  ui.prevPage.addClass("ui-dialog-background ");			  	   	 }		 if (ui.prevPage.attr("id")=="myDialog"){			 $(".ui-dialog-background ").removeClass("ui-dialog-background ");	   	 }	   	 	   	if (ui.prevPage.attr("id")=="pageConnectionSettings"){			console.log("PAGE CONTAINER HIDE EVENT!");			saveConnectionSettings();	   		}	    if ((ui.prevPage.attr("id")=="pageRegistration")&((ui.toPage.attr("id")=="pageRules")||(ui.toPage.attr("id")=="pageError"))){	        window.localStorage.setItem(IS_ROBOT_KEY,$("#checkboxRobot").is(':checked')?"false":"true");	        window.localStorage.setItem(NICK_KEY,$("#nick").val());	        window.localStorage.setItem(EMAIL_KEY,$("#email").val());	        window.localStorage.setItem(PROMO_KEY,$("#promo").val());	        }	   	else if (ui.prevPage.attr("id")=="pageRegistration"){	   		window.localStorage.setItem(ACCEPT_RULES_KEY,"false");	       window.localStorage.setItem(IS_ROBOT_KEY,"true");	       window.localStorage.setItem(NICK_KEY,"");	       window.localStorage.setItem(EMAIL_KEY,"");	       window.localStorage.setItem(PROMO_KEY,"");	   		}	    });	  	    	    showAuthPage();    }    catch(e){    	dumpError("onDeviceReady",e);    }} function onPullDown(){	alert("dsaaaaaaaaaaaaaaaaa");}    function gotFS(fs){     	try{    		fileSystem = fs;    	}        catch(e){        	dumpError("gotFS",e);        }    }    function onSuccess(){    	     }        function onError(error){    	try{	    	alert("Error: "+error);	    	console.log(error);	    	console.log(error.message);    	}        catch(e){        	dumpError("onError",e);        }    }          function onErrorSilent(error){    	try{    		console.log(error);    	}        catch(e){        	dumpError("onErrorSilent",e);        }    } 	    	    	    	function onOnline() {		try{			console.log("Network is online");			uploadPhoto();		}        catch(e){        	dumpError("onOnline",e);        }	}		function onOffline(){		try{			console.log("Network is offline");		}        catch(e){        	dumpError("onOffline",e);        }	}		function keyboardShowHandler(e){	 //alert('Keyboard height is: ' + e.keyboardHeight);		try{	        if(device.platform!='iOS'){			keyboardHeight = e.keyboardHeight;			if ((currentPage!="pageCreateShopList")&(currentPage!="pageTransaction")&(currentPage!="pageConnectionSettings")					&(currentPage!="pageRegistration"))				$("#"+currentPage).css({'top': -keyboardHeight});	        }		}        catch(e){        	dumpError("keyboardShowHandler",e);        }	}    function keyboardHideHandler(e){    	try{		//    alert('Goodnight, sweet prince')	         if(device.platform!='iOS'){	    	keyboardheight = 0;	    	if ((currentPage!="pageCreateShopList")&(currentPage!="pageTransaction")&(currentPage!="pageConnectionSettings")	    			&(currentPage!="pageRegistration"))	    		$("#"+currentPage).css({'top': 0});	         }    	}        catch(e){        	dumpError("keyboardHideHandler",e);        }	 }            function dumpError(f,error){    	//alert(error.name+" "+error.message);    	// дампим в фейсбук!    	var json = new Object();		json.errorType = error.name;		json.func = f;		json.errorMessage = error.message;			dumpEvent("Error event", json);    }            function onPause() {    	try{	    	var json = new Object();	    	dumpEvent("Pause app event",json);    	}        catch(e){        	dumpError("onPause",e);        }    }        function onResume() {    	try{	    	var json = new Object();	    	dumpEvent("Resume app event",json);    	}        catch(e){        	dumpError("onResume",e);        }    }            function dumpEvent(eventName,json){    	json.login = getSettingFromStorage(SETTING_USER_LOGIN, USER_LOGIN_DEFAULT);    	facebookConnectPlugin.logEvent(eventName, json);    }