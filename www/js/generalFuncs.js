var pictureSource;   // picture sourcevar destinationType; // sets the format of returned value// Г”Г“Г’ГЋГ‚вЂ°ГЊЛ‡Л‡ Г™Г“ГљГ“вЂћпЈївЂЎГ™Г‹Л‡ Г’ ГЌвЂЎГЏГ‚пЈїЛљ\вЂ°Г‹Г’ГЌвЂЎvar currentPhoto;// вЂЎвЂ°пЈїГ‚Г’ Г’Г‚пЈївЂљГ‚пЈївЂЎvar addPhotoURL = "api/image/";var getPhotoURL = "api/image/";var getPhotosURL = "api/image/";var getTokenURL = "token";var getEnvironmentURL = "api/account/environment";var getTransactionsURL = "api/transactions";var getProductListsURL = "api/productlists";/*GET /api/productlists - получение всего спискаGET /api/productlists/{id} - получение одногоPOST /api/productlists - создание нового/сохранение*/var fileSystem;var db = 0;var currentPage = "pageAuth";var menuStatus =false;document.addEventListener("online", onOnline, false);document.addEventListener("offline", onOffline, false);document.addEventListener("deviceready",onDeviceReady,false);function onDeviceReady() {        pictureSource=navigator.camera.PictureSourceType;    destinationType=navigator.camera.DestinationType;    window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, onError);	openDB();//	$.mobile.allowCrossDomainPages = true;	//	refreshBills();//	showAuthPage();   var uuid = "593a33fc-2d22-418c-967a-a2ff60e40da6";    var token = "a676f0fc1be603eb9db15316490a605c";    var secret = "28bfa152cbb25ce82f447784994addc7";    var issuance = "1419938400";    plugins.appBlade.setupAppBlade(uuid,token, secret, issuance);    plugins.appBlade.catchAndReportCrashes();    plugins.appBlade.allowFeedbackReporting();  	    document.addEventListener("backbutton", function(e){    	console.log($( ":mobile-pagecontainer" ).pagecontainer( "getActivePage" ).prop("id"));        if($( ":mobile-pagecontainer" ).pagecontainer( "getActivePage" ).prop("id")==('pageAuth')){            //e.preventDefault();            navigator.app.exitApp();        }        else {            navigator.app.backHistory();        }    }, false);    var options = {		duration:	200,		easing:		'swing'	};    // $.mobile.pageContainer.pagecontainer({ defaults: true });    console.log("SCREEN SIZE: "+window.devicePixelRatio+" ;"+screen.width+" ;"+window.innerWidth);                //SHOW        $( ":mobile-pagecontainer" ).on( "pagecontainershow", function( event, ui ) {   	ui.toPage.on('taphold', function(ev) {    		ev.preventDefault();    		ev.stopPropagation();			plugins.appBlade.showFeedbackDialog("true");			return false;		});         $('#alert_dialog').on('taphold', function(ev) {                ev.preventDefault();                 ev.stopPropagation();                 plugins.appBlade.showFeedbackDialog("true");                 return false;                 });    	// PAGE BIILS    	 if (ui.toPage.attr("id")=="pageBills"){     		refreshBills();     	  }    	// PAGE MAIN    	  if (ui.toPage.attr("id")=="pageMain"){  		    $(".categoryMenu").click(function(e){		        $('.widgetMenu').show();		        e.stopPropagation();		        $("body").click(function (t) {		            if (!$(t.target).hasClass('categoryMenu') || !$(t.target).hasClass('widgetMenuPanel')) {		                $('.widgetMenu').hide();		            };		        });		    });		    $(".menu").click(function(e){		        $('.menu').addClass('menuActive');		        $('.menuPanel').show();		        e.stopPropagation();		        $("body").click(function (t) {		            if (!$(t.target).hasClass('menu') || !$(t.target).hasClass('menuPanel')) {		                $('.menuPanel').hide();		                $('.menu').removeClass('menuActive');		            };		        });		    });		    		    		    //(default: 10px)		   // $.event.special.swipe.scrollSupressionThreshold = 1;		     //(default: 1000ms)		    $.event.special.swipe.durationThreshold = 3000;		     //(default: 30px)		    $.event.special.swipe.horizontalDistanceThreshold = 30;		    //(default: 75px)		    $.event.special.swipe.verticalDistanceThreshold  = 300;		    		    		    $( ":mobile-pagecontainer" ).on('swipeleft', function(e) {		    	$( "#mypanel" ).panel( "close" );			});		    $( ":mobile-pagecontainer" ).on('swiperight', function(e) {		    	$( "#mypanel" ).panel( "open" , options);							});		    		    		    		    		    updateMainPage();		   // requestAndUpdateMainPage();;		    		  /*  $('.icoCategory').click(function(){		    	alert($(this).attr("categoryID"));		    	showExpensesPage($(this).attr("categoryID"));		    			    });		    		    */		    		   		          	  }    	  //PAGE CHECK    	  if (ui.toPage.attr("id")=="pageCheck"){    		    db.transaction(    			   	 function(transaction) {    			   		 var billID = window.localStorage.getItem(BILL_ID_KEY);    			   	        transaction.executeSql('SELECT * FROM Bills where id='+billID+';', [], function(transaction, result) {    			   	        	 var row = result.rows.item(0);    			   	        	 $('#billName').html(row.name+" "+row.id);    			   	        	 //$('#billDate').html(formatDate(row.createdate));    			   	        	 $('#billImage').attr('src',row.path);    			    	        }, onError);    		  	    });    	  }    	      	  //PAGE LOGIN    	  if (ui.toPage.attr("id")=="pageAuth"){   			/*getSetting(SETTING_USER_LOGIN, USER_LOGIN_DEFAULT).done(function(res){   				document.getElementById('login').value = res;   			});   			document.getElementById('password').value= getSetting(SETTING_USER_PASSWORD, USER_PASSWORD_DEFAULT);   			*/    		 updateLoginPage();     		      	  }    	  // PAGE CONNECTION SETTINGS    	  if (ui.toPage.attr("id")=="pageConnectionSettings"){    		  getSetting(SETTING_SERVER_ADDRESS, SERVER_ADDRESS_DEFAULT).done(function(res){    			  document.getElementById('serverAddress').value =res;    		  });    			//document.getElementById('serverAddress').value = getSetting(SETTING_SERVER_ADDRESS, SERVER_ADDRESS_DEFAULT);    		//	console.log("Server Address "+getSetting(SETTING_SERVER_ADDRESS, SERVER_ADDRESS_DEFAULT));      	  }    	  // PAGE EXPENSES GRID    	  if (ui.toPage.attr("id")=="pageExpenses"){    		//refreshExpenses();    		  window.localStorage.removeItem(TRANSACTION_ID_KEY);    		  updateTransactionPage();    		/*  $("#iscroll-wrapper", this).bind( {    		        "iscroll_onpulldown" : onPullDown,    		        "iscroll_onpullup"   : onPullDown    		        });    		        */      	  }    	      	  // PAGE TRANSACTION INFO    	  if (ui.toPage.attr("id")=="pageTransactionInfo"){    		  updateTransactionInfoPage();    		        	  }    	      	  // PAGE SHOP LIST    	  if (ui.toPage.attr("id")=="pageShopList"){    		      		/*  $( "#autocomplete" ).position({    			  of: $( "#alreadyBoughtList" ),    			  my: "left bottom",    		       at: "left top" ,    		       collision: "flip flip",    		    	   offset: '250px 50px '    		  });    		  */    		  //$('#autocomplete').css('width','300px !important;');			  //$('#autocomplete').css('bottom','5em !important;');			  //$('#autocomplete').css('left','10px !important;');			  //$('#autocomplete').css('position','relative!important;');    		  //$('#autocomplete>.autoLi').css('width','100px !important;');    		  //$('#autocomplete>.autoLi').css('background','#417272 !important;');     		      		  console.log("Height of edit: "+  $('ul li:last').height());    		 // $('#autocomplete>.autoLi').css('position','absolute !important;');    		  //$('#autocomplete>.autoLi').css('top','-220px !important;');   		    		//  $('#autocomplete>.autoLi').css('bottom','-200px !important;');   	    		      		   			/*   $( "#autocomplete" ).on( "filterablebeforefilter", function ( e, data ) {   			        var $ul = $( this ),   			            $input = $( data.input ),   			            value = $input.val(),   			            html = "";   			        $ul.html( "" );   			        if ( value && value.length > 2 ) {   			            //$ul.html( "<li><div class='ui-loader'><span class='ui-icon ui-icon-loading'></span></div></li>" );   			            html += "<li>" + "fhfhf" + "</li>";   			            html += "<li>" + "sfdfs" + "</li>";   			            $ul.html( html );   			            console.log("Adding copntent to listview: "+html);   			            $ul.listview( "refresh" );		                $ul.trigger( "updatelayout");*/   			       /*     $.ajax({   			                url: "http://gd.geobytes.com/AutoCompleteCity",   			                dataType: "jsonp",   			                crossDomain: true,   			                data: {   			                    q: $input.val()   			                }   			            })   			            .then( function ( response ) {   			                $.each( response, function ( i, val ) {   			                    html += "<li>" + val + "</li>";   			                });   			                $ul.html( html );   			                $ul.listview( "refresh" );   			                $ul.trigger( "updatelayout");   			            });*/   			  /*      }   			    });*/    		      		 updateShopListsPage(true);    		  $('#shopListName').on( "swiperight",nextShopList);    		  $('#shopListName').on( "swipeleft",previousShopList);    		  $('#shopListName').bind( "tap",nextShopList);    		 $("#sendShopListImage").click(function(e){    			 sendShopList(window.localStorage.getItem('ShopListID'));    		 	});    		     		 $("#addToShopListImage").click(function(e){    				addToShopList(window.localStorage.getItem('ShopListID'),$('#inset-autocomplete-input').val()).done(    						function (res){    							console.log("updateShopListPage2");    							updateShopListsPage(true);    						}    					);    			});    	  	}    	      	});    // для нескольих запросов    //$.when()    // HIDE    $( ":mobile-pagecontainer" ).on( "pagecontainerbeforehide", function( event, ui ) {    	// PAGE SETTINGS   	 if (ui.prevPage.attr("id")=="pageSettings"){    		saveSettings();    	  }   	if (ui.prevPage.attr("id")=="pageConnectionSettings"){		console.log("PAGE CONTAINER HIDE EVENT!");		saveConnectionSettings();   		}    });        showAuthPage();} function onPullDown(){	alert("dsaaaaaaaaaaaaaaaaa");}    function gotFS(fs){     	fileSystem = fs;    }    function onSuccess(){    	     }        function onError(error){    	alert("Error: "+error);    	console.log(error);    	console.log(error.message);    }          function onErrorSilent(error){    	console.log(error);    } 	    	    	    	function onOnline() {		console.log("Network is online");		uploadPhoto();	}		function onOffline(){		console.log("Network is offline");	}	